# -*- coding: utf-8 -*-
# Generated by Django 1.11.16 on 2018-10-31 15:16
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='GuestEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guest_gender', models.CharField(max_length=2)),
                ('no_of_stay', models.IntegerField(default=None)),
                ('guest_name', models.CharField(default=None, max_length=100)),
                ('guest_age', models.IntegerField(default=None)),
            ],
        ),
        migrations.CreateModel(
            name='HostelComplaint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complaint', models.CharField(default=None, max_length=500)),
                ('complain_time', models.DateTimeField(default=datetime.datetime.now)),
            ],
        ),
        migrations.CreateModel(
            name='InOutList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('in_time', models.DateTimeField(default=None)),
                ('out_time', models.DateTimeField(default=None)),
                ('out_reason', models.CharField(default=None, max_length=500)),
                ('out_place', models.CharField(default=None, max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='MobileNo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobile_no', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='RoomRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pref_room_no', models.IntegerField(default=0)),
                ('fee_proof', models.FileField(upload_to='documents/')),
                ('hostel_name', models.CharField(default=None, max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_student', models.BooleanField(default=False)),
                ('is_employee', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('first_name', models.CharField(default=None, max_length=50)),
                ('middle_name', models.CharField(default=None, max_length=50)),
                ('last_name', models.CharField(default=None, max_length=50)),
                ('gender', models.CharField(max_length=2)),
                ('joining_year', models.CharField(max_length=10)),
                ('blood_grp', models.CharField(default=None, max_length=20)),
                ('role', models.CharField(max_length=10)),
                ('department', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('first_name', models.CharField(default=None, max_length=50, null=True)),
                ('rollno', models.CharField(default=None, max_length=50, unique=True)),
                ('middle_name', models.CharField(default=None, max_length=50, null=True)),
                ('last_name', models.CharField(default=None, max_length=50, null=True)),
                ('regis_year', models.IntegerField(default=None, null=True)),
                ('gender', models.CharField(max_length=2, null=True)),
                ('curr_year', models.IntegerField(default=None, null=True)),
                ('regis_deg', models.CharField(default=None, max_length=20, null=True)),
                ('regis_deg_dur', models.IntegerField(default=None, null=True)),
                ('curr_sem', models.IntegerField(default=None, null=True)),
                ('blood_grp', models.CharField(default=None, max_length=20, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='mobileno',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='roomregistration',
            name='student',
            field=models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, to='Hostel.Student'),
        ),
        migrations.AddField(
            model_name='inoutlist',
            name='student',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Hostel.Student'),
        ),
        migrations.AddField(
            model_name='hostelcomplaint',
            name='student',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Hostel.Student'),
        ),
        migrations.AddField(
            model_name='guestentry',
            name='student',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Hostel.Student'),
        ),
    ]
